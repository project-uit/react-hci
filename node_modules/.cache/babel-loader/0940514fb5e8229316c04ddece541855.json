{"ast":null,"code":"import _classCallCheck from \"E:\\\\Git\\\\react-hci\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Git\\\\react-hci\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Git\\\\react-hci\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Git\\\\react-hci\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Git\\\\react-hci\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Git\\\\react-hci\\\\src\\\\Checkout\\\\StepOne.js\";\nimport './Checkout.css';\nimport React, { Component } from 'react';\nimport { Form, Input, Tooltip, Icon, Select, Button } from 'antd';\nvar FormItem = Form.Item;\nvar Option = Select.Option;\nvar TextArea = Input.TextArea;\n\nvar AddressForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddressForm, _Component);\n\n  function AddressForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddressForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddressForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      customer: {\n        email: '',\n        name: '',\n        phone: '',\n        address: ''\n      },\n      isValid: false\n    };\n\n    _this.next = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (err) {\n          _this.setState({\n            customer: values,\n            isValid: false\n          });\n\n          _this.props.handlerNext(values, false);\n        } else {\n          _this.setState({\n            customer: values,\n            isValid: true\n          });\n\n          _this.props.handlerNext(values, true);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddressForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var customer = this.props.customer;\n\n      if (customer !== null) {\n        this.props.form.setFieldsValue({\n          'email': customer.email,\n          'name': customer.name,\n          'phone': customer.phone,\n          'address': customer.address\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 6\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 15\n          }\n        }\n      };\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '84'\n      })(React.createElement(Select, {\n        style: {\n          width: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"84\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"+84\")));\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Email\\xA0\", React.createElement(Tooltip, {\n          title: \"Ch\\xFAng t\\xF4i s\\u1EBD g\\u1EEDi th\\xF4ng tin \\u0111\\u01A1n h\\xE0ng, th\\xF4ng tin khuy\\u1EBFn m\\xE3i v\\xE0 c\\xE1c ch\\u01B0\\u01A1ng tr\\xECnh \\u01B0u \\u0111\\xE3i cho kh\\xE1ch h\\xE0ng\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"question-circle-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'Email không hợp lệ!'\n        }, {\n          required: true,\n          message: 'Email không được trống!'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"T\\xEAn kh\\xE1ch h\\xE0ng\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), getFieldDecorator('name', {\n        rules: [{\n          required: true,\n          message: 'Tên không được trống!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Phone Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), getFieldDecorator('phone', {\n        rules: [{\n          required: true,\n          message: 'Số điện thoại không được trống!'\n        }]\n      })(React.createElement(Input, {\n        addonBefore: prefixSelector,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u0110\\u1ECBa ch\\u1EC9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), getFieldDecorator('address', {\n        rules: [{\n          required: true,\n          message: 'Địa chỉ không được trống!',\n          whitespace: true\n        }]\n      })(React.createElement(TextArea, {\n        placeholder: \"\\u0110\\u1ECBa ch\\u1EC9 nh\\u1EADn h\\xE0ng\",\n        autosize: {\n          minRows: 2,\n          maxRows: 6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.next,\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"B\\u01B0\\u1EDBc ti\\u1EBFp\"));\n    }\n  }]);\n\n  return AddressForm;\n}(Component);\n\nvar StepOne = Form.create()(AddressForm);\nexport default StepOne;","map":{"version":3,"sources":["E:\\Git\\react-hci\\src\\Checkout\\StepOne.js"],"names":["React","Component","Form","Input","Tooltip","Icon","Select","Button","FormItem","Item","Option","TextArea","AddressForm","state","customer","email","name","phone","address","isValid","next","e","preventDefault","props","form","validateFields","err","values","setState","handlerNext","setFieldsValue","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","prefixSelector","initialValue","width","handleSubmit","rules","type","message","required","whitespace","minRows","maxRows","StepOne","create"],"mappings":"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","sourcesContent":["import './Checkout.css';\nimport React, { Component } from 'react';\nimport { Form, Input, Tooltip, Icon, Select, Button } from 'antd';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst { TextArea } = Input;\n\nclass AddressForm extends Component {\n    state = {\n        customer: {\n            email: '',\n            name: '',\n            phone: '',\n            address: '',\n        },\n        isValid: false\n    };\n\n    next = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (err) {\n                this.setState({ customer: values, isValid: false })\n                this.props.handlerNext(values, false);\n            } else {\n                this.setState({ customer: values, isValid: true })\n                this.props.handlerNext(values, true);\n            }\n        });\n    }\n\n    componentDidMount() {\n        const { customer } = this.props;\n        if (customer !== null) {\n            this.props.form.setFieldsValue({\n                'email': customer.email,\n                'name': customer.name,\n                'phone': customer.phone,\n                'address': customer.address\n            });\n        }\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 6 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 15 },\n            },\n        };\n\n        const prefixSelector = getFieldDecorator('prefix', {\n            initialValue: '84',\n        })(\n            <Select style={{ width: 70 }}>\n                <Option value=\"84\">+84</Option>\n            </Select>\n        );\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <FormItem\n                    {...formItemLayout}\n                    label={(\n                        <span>\n                            Email&nbsp;\n                <Tooltip title=\"Chúng tôi sẽ gửi thông tin đơn hàng, thông tin khuyến mãi và các chương trình ưu đãi cho khách hàng\">\n                                <Icon type=\"question-circle-o\" />\n                            </Tooltip>\n                        </span>\n                    )}\n                >\n                    {getFieldDecorator('email', {\n                        rules: [{\n                            type: 'email', message: 'Email không hợp lệ!',\n                        }, {\n                            required: true, message: 'Email không được trống!',\n                        }],\n                    })(\n                        <Input />\n                    )}\n                </FormItem>\n\n                <FormItem\n                    {...formItemLayout}\n                    label=\"Tên khách hàng\"\n                >\n                    {getFieldDecorator('name', {\n                        rules: [{ required: true, message: 'Tên không được trống!', whitespace: true }],\n                    })(\n                        <Input />\n                    )}\n                </FormItem>\n\n                <FormItem\n                    {...formItemLayout}\n                    label=\"Phone Number\">\n                    {getFieldDecorator('phone', {\n                        rules: [{\n                            required: true, message: 'Số điện thoại không được trống!',\n                        }],\n                    })(\n                        <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    {...formItemLayout}\n                    label=\"Địa chỉ\">\n                    {getFieldDecorator('address', {\n                        rules: [{ required: true, message: 'Địa chỉ không được trống!', whitespace: true }],\n                    })(\n                        <TextArea placeholder=\"Địa chỉ nhận hàng\" autosize={{ minRows: 2, maxRows: 6 }} />\n                    )}\n                </FormItem>\n               \n                <Button type=\"primary\" onClick={this.next} className=\"float-right\">Bước tiếp</Button>\n            </Form>\n        );\n    }\n}\n\nconst StepOne = Form.create()(AddressForm);\nexport default StepOne;\n\n"]},"metadata":{},"sourceType":"module"}